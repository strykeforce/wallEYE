{"ast":null,"code":"import{Card,Col,Form,Row}from\"react-bootstrap\";import CameraStream from\"./CameraStream\";import{useState}from\"react\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CameraStreamList(props){const[currentCam,setCurrentCam]=useState(props.state.cameraIDs.length===0?null:props.state.cameraIDs[0]);var cameraStreams={};for(const camID of props.state.cameraIDs){cameraStreams[camID]=/*#__PURE__*/_jsx(CameraStream,{camID:camID,state:props.state,poses:props.poses,showConfig:props.showConfig,readTime:props.camReadTime?props.camReadTime[camID]:\"Not Updating!\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Form.Select,{onChange:e=>{setCurrentCam(e.target.value);},value:currentCam,children:props.state.cameraIDs.map(camID=>/*#__PURE__*/_jsx(\"option\",{value:camID,children:camID}))}),/*#__PURE__*/_jsx(\"br\",{}),currentCam?cameraStreams[currentCam]:/*#__PURE__*/_jsx(\"p\",{children:\" No cameras available\"})]});}","map":{"version":3,"names":["Card","Col","Form","Row","CameraStream","useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","CameraStreamList","props","currentCam","setCurrentCam","state","cameraIDs","length","cameraStreams","camID","poses","showConfig","readTime","camReadTime","children","Select","onChange","e","target","value","map"],"sources":["/home/orangepi/Desktop/wallEYE-main/PiSideCode/web_interface/walleye/src/Components/CameraSteamList.jsx"],"sourcesContent":["import { Card, Col, Form, Row } from \"react-bootstrap\";\nimport CameraStream from \"./CameraStream\";\nimport { useState } from \"react\";\n\nexport default function CameraStreamList(props) {\n    const [currentCam, setCurrentCam] = useState(\n        props.state.cameraIDs.length === 0 ? null : props.state.cameraIDs[0]\n    );\n\n    var cameraStreams = {};\n\n    for (const camID of props.state.cameraIDs) {\n        cameraStreams[camID] = (\n            <CameraStream\n                camID={camID}\n                state={props.state}\n                poses={props.poses}\n                showConfig={props.showConfig}\n                readTime={props.camReadTime ? props.camReadTime[camID] : \"Not Updating!\"}\n            />\n        );\n    }\n    return (\n        <>\n            <Form.Select\n                onChange={(e) => {\n                    setCurrentCam(e.target.value);\n                }}\n                value={currentCam}\n            >\n                {props.state.cameraIDs.map((camID) => (\n                    <option value={camID}>{camID}</option>\n                ))}\n            </Form.Select>\n            <br />\n            {currentCam ? (\n                cameraStreams[currentCam]\n            ) : (\n                <p> No cameras available</p>\n            )}\n        </>\n    );\n}\n"],"mappings":"AAAA,OAASA,IAAI,CAAEC,GAAG,CAAEC,IAAI,CAAEC,GAAG,KAAQ,iBAAiB,CACtD,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,OAASC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjC,cAAe,SAAS,CAAAC,gBAAgBA,CAACC,KAAK,CAAE,CAC5C,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CACxCQ,KAAK,CAACG,KAAK,CAACC,SAAS,CAACC,MAAM,GAAK,CAAC,CAAG,IAAI,CAAGL,KAAK,CAACG,KAAK,CAACC,SAAS,CAAC,CAAC,CACvE,CAAC,CAED,GAAI,CAAAE,aAAa,CAAG,CAAC,CAAC,CAEtB,IAAK,KAAM,CAAAC,KAAK,GAAI,CAAAP,KAAK,CAACG,KAAK,CAACC,SAAS,CAAE,CACvCE,aAAa,CAACC,KAAK,CAAC,cAChBb,IAAA,CAACH,YAAY,EACTgB,KAAK,CAAEA,KAAM,CACbJ,KAAK,CAAEH,KAAK,CAACG,KAAM,CACnBK,KAAK,CAAER,KAAK,CAACQ,KAAM,CACnBC,UAAU,CAAET,KAAK,CAACS,UAAW,CAC7BC,QAAQ,CAAEV,KAAK,CAACW,WAAW,CAAGX,KAAK,CAACW,WAAW,CAACJ,KAAK,CAAC,CAAG,eAAgB,CAC5E,CACJ,CACL,CACA,mBACIT,KAAA,CAAAF,SAAA,EAAAgB,QAAA,eACIlB,IAAA,CAACL,IAAI,CAACwB,MAAM,EACRC,QAAQ,CAAGC,CAAC,EAAK,CACbb,aAAa,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACjC,CAAE,CACFA,KAAK,CAAEhB,UAAW,CAAAW,QAAA,CAEjBZ,KAAK,CAACG,KAAK,CAACC,SAAS,CAACc,GAAG,CAAEX,KAAK,eAC7Bb,IAAA,WAAQuB,KAAK,CAAEV,KAAM,CAAAK,QAAA,CAAEL,KAAK,CAAS,CACxC,CAAC,CACO,CAAC,cACdb,IAAA,QAAK,CAAC,CACLO,UAAU,CACPK,aAAa,CAACL,UAAU,CAAC,cAEzBP,IAAA,MAAAkB,QAAA,CAAG,uBAAqB,CAAG,CAC9B,EACH,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}