{"ast":null,"code":"import Form from\"react-bootstrap/Form\";import{Button,FormLabel,InputGroup}from\"react-bootstrap\";import{socket}from\"../socket.js\";import{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Config(props){const[newTableName,setNewTableName]=useState(props.state.tableName);const[newTeamNumber,setNewTeamNumber]=useState(props.state.teamNumber);const[newBoardDimsW,setNewBoardDimsW]=useState(props.state.boardDims[0]);const[newBoardDimsH,setNewBoardDimsH]=useState(props.state.boardDims[1]);const[newStaticIP,setNewStaticIP]=useState(props.state.ip);const[newTagSize,setNewTagSize]=useState(props.state.tagSize);const[newUDPPort,setNewUDPPort]=useState(props.state.udpPort);return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Text,{children:\"Table Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:newTableName,onChange:e=>{setNewTableName(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:()=>{socket.emit(\"set_table_name\",newTableName);},children:\"Update\"})]})}),/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Text,{children:\"Team Number\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:newTeamNumber,onChange:e=>{setNewTeamNumber(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:()=>{socket.emit(\"set_team_number\",newTeamNumber);},children:\"Update\"})]})}),/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Text,{children:\"Select Calibration Type\"}),/*#__PURE__*/_jsx(Form.Select,{onChange:e=>{socket.emit(\"set_calibration_type\",e.target.value);},value:props.state.calibrationType,children:[\"Chessboard\",\"Circle Grid\"].map(calType=>/*#__PURE__*/_jsx(\"option\",{value:calType,children:calType}))})]})}),/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Text,{children:\"Calibration Board Dimensions\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:newBoardDimsW,onChange:e=>{setNewBoardDimsW(e.target.value);}}),/*#__PURE__*/_jsx(InputGroup.Text,{children:\"by\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:newBoardDimsH,onChange:e=>{setNewBoardDimsH(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:()=>{socket.emit(\"set_board_dims\",newBoardDimsW,newBoardDimsH);},children:\"Update\"})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Text,{children:\"Set Static IP\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:newStaticIP,onChange:e=>{setNewStaticIP(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:()=>{socket.emit(\"set_static_ip\",newStaticIP);},children:\"Update\"})]})}),/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Text,{children:\"UDP Port\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:newUDPPort,onChange:e=>{setNewUDPPort(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:()=>{socket.emit(\"set_udp_port\",newUDPPort);},children:\"Update\"})]})}),/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Text,{children:\"Set Tag Size\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:newTagSize,onChange:e=>{setNewTagSize(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:()=>{socket.emit(\"set_tag_size\",newTagSize);},children:\"Update\"})]})})]});}","map":{"version":3,"names":["Form","Button","FormLabel","InputGroup","socket","useState","jsx","_jsx","jsxs","_jsxs","Config","props","newTableName","setNewTableName","state","tableName","newTeamNumber","setNewTeamNumber","teamNumber","newBoardDimsW","setNewBoardDimsW","boardDims","newBoardDimsH","setNewBoardDimsH","newStaticIP","setNewStaticIP","ip","newTagSize","setNewTagSize","tagSize","newUDPPort","setNewUDPPort","udpPort","children","Group","className","Text","Control","type","value","onChange","e","target","variant","onClick","emit","Select","calibrationType","map","calType"],"sources":["/home/orangepi/Desktop/wallEYE-main/PiSideCode/web_interface/walleye/src/Components/Config.jsx"],"sourcesContent":["import Form from \"react-bootstrap/Form\";\nimport { Button, FormLabel, InputGroup } from \"react-bootstrap\";\nimport { socket } from \"../socket.js\";\nimport { useState } from \"react\";\n\nexport default function Config(props) {\n    const [newTableName, setNewTableName] = useState(props.state.tableName);\n    const [newTeamNumber, setNewTeamNumber] = useState(props.state.teamNumber);\n    const [newBoardDimsW, setNewBoardDimsW] = useState(\n        props.state.boardDims[0]\n    );\n    const [newBoardDimsH, setNewBoardDimsH] = useState(\n        props.state.boardDims[1]\n    );\n\n    const [newStaticIP, setNewStaticIP] = useState(props.state.ip);\n    const [newTagSize, setNewTagSize] = useState(props.state.tagSize);\n    const [newUDPPort, setNewUDPPort] = useState(props.state.udpPort);\n\n\n    return (\n        <Form>\n            <Form.Group className=\"mb-3\">\n                <InputGroup>\n                    <InputGroup.Text>Table Name</InputGroup.Text>\n                    <Form.Control\n                        type=\"text\"\n                        value={newTableName}\n                        onChange={(e) => {\n                            setNewTableName(e.target.value);\n                        }}\n                    />\n                    <Button\n                        variant=\"info\"\n                        onClick={() => {\n                            socket.emit(\"set_table_name\", newTableName);\n                        }}\n                    >\n                        Update\n                    </Button>\n                </InputGroup>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <InputGroup>\n                    <InputGroup.Text>Team Number</InputGroup.Text>\n                    <Form.Control\n                        type=\"number\"\n                        value={newTeamNumber}\n                        onChange={(e) => {\n                            setNewTeamNumber(e.target.value);\n                        }}\n                    />\n                    <Button\n                        variant=\"info\"\n                        onClick={() => {\n                            socket.emit(\"set_team_number\", newTeamNumber);\n                        }}\n                    >\n                        Update\n                    </Button>\n                </InputGroup>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <InputGroup>\n                    <InputGroup.Text>Select Calibration Type</InputGroup.Text>\n                    <Form.Select\n                        onChange={(e) => {\n                            socket.emit(\"set_calibration_type\", e.target.value);\n                        }}\n                        value={props.state.calibrationType}\n                    >\n                        {[\"Chessboard\", \"Circle Grid\"].map((calType) => (\n                            <option value={calType}>{calType}</option>\n                        ))}\n                    </Form.Select>\n                </InputGroup>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <InputGroup>\n                    <InputGroup.Text>\n                        Calibration Board Dimensions\n                    </InputGroup.Text>\n                    <Form.Control\n                        type=\"number\"\n                        value={newBoardDimsW}\n                        onChange={(e) => {\n                            setNewBoardDimsW(e.target.value);\n                        }}\n                    />\n                    <InputGroup.Text>by</InputGroup.Text>\n                    <Form.Control\n                        type=\"number\"\n                        value={newBoardDimsH}\n                        onChange={(e) => {\n                            setNewBoardDimsH(e.target.value);\n                        }}\n                    />\n                    <Button\n                        variant=\"info\"\n                        onClick={() => {\n                            socket.emit(\n                                \"set_board_dims\",\n                                newBoardDimsW,\n                                newBoardDimsH\n                            );\n                        }}\n                    >\n                        Update\n                    </Button>\n                </InputGroup>\n            </Form.Group>\n            <br />\n            <Form.Group className=\"mb-3\">\n                <InputGroup>\n                    <InputGroup.Text>Set Static IP</InputGroup.Text>\n                    <Form.Control\n                        type=\"text\"\n                        value={newStaticIP}\n                        onChange={(e) => {\n                            setNewStaticIP(e.target.value);\n                        }}\n                    />\n                    <Button\n                        variant=\"info\"\n                        onClick={() => {\n                            socket.emit(\"set_static_ip\", newStaticIP);\n                        }}\n                    >\n                        Update\n                    </Button>\n                </InputGroup>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <InputGroup>\n                    <InputGroup.Text>UDP Port</InputGroup.Text>\n                    <Form.Control\n                        type=\"number\"\n                        value={newUDPPort}\n                        onChange={(e) => {\n                            setNewUDPPort(e.target.value);\n                        }}\n                    />\n                    <Button\n                        variant=\"info\"\n                        onClick={() => {\n                            socket.emit(\"set_udp_port\", newUDPPort);\n                        }}\n                    >\n                        Update\n                    </Button>\n                </InputGroup>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <InputGroup>\n                    <InputGroup.Text>Set Tag Size</InputGroup.Text>\n                    <Form.Control\n                        type=\"number\"\n                        value={newTagSize}\n                        onChange={(e) => {\n                            setNewTagSize(e.target.value);\n                        }}\n                    />\n                    <Button\n                        variant=\"info\"\n                        onClick={() => {\n                            socket.emit(\"set_tag_size\", newTagSize);\n                        }}\n                    >\n                        Update\n                    </Button>\n                </InputGroup>\n            </Form.Group>\n        </Form>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}